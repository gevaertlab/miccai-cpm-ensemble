FROM nvidia/cuda:8.0-cudnn6-devel-ubuntu16.04

MAINTAINER Sai Soundararaj <saip@outlook.com>

ARG TENSORFLOW_VERSION=1.3.0
ARG TENSORFLOW_ARCH=gpu

#RUN echo -e "\n**********************\nNVIDIA Driver Version\n**********************\n" && \
#   cat /proc/driver/nvidia/version && \
#   echo -e "\n**********************\nCUDA Version\n**********************\n" && \
#   nvcc -V && \
#   echo -e "\n\nBuilding your Deep Learning Docker Image...\n"

# Install some dependencies
RUN apt-get update && apt-get install -y \
        bc \
        build-essential \
        cmake \
        curl \
        g++ \
        gfortran \
        git \
        libffi-dev \
        nano \
        pkg-config \
        software-properties-common \
        unzip \
        vim \
        wget \
        zlib1g-dev \
        qt5-default \
        libvtk6-dev \
        zlib1g-dev \
        libgdal-dev \
        libdc1394-22-dev \
        libswscale-dev \
        libtheora-dev \
        libvorbis-dev \
        libx264-dev \
        yasm \
        libv4l-dev \
        libxine2-dev \
        libtbb-dev \
        libeigen3-dev \
        python3-dev \
        python3-tk \
        python3-numpy \
        ant \
        default-jdk \
        doxygen \
        && \
    apt-get clean && \
    apt-get autoremove && \
    rm -rf /var/lib/apt/lists/*

# Install pip
RUN curl -O https://bootstrap.pypa.io/get-pip.py && \
    python3 get-pip.py && \
    rm get-pip.py

# Add SNI support to Python
RUN pip --no-cache-dir install \
        pyopenssl \
        ndg-httpsclient \
        pyasn1

# Install useful Python packages using apt-get to avoid version incompatibilities with Tensorflow binary
# especially numpy, scipy, skimage and sklearn (see https://github.com/tensorflow/tensorflow/issues/2034)
RUN apt-get update && apt-get install -y \
        python3-numpy \
        python3-scipy \
        python3-nose \
        python3-h5py \
        python3-skimage \
        python3-matplotlib \
        python3-pandas \
        python3-sklearn \
        python3-sympy \
        && \
    apt-get clean && \
    apt-get autoremove && \
    rm -rf /var/lib/apt/lists/*

# Install other useful Python packages using pip
RUN pip --no-cache-dir install --upgrade ipython && \
    pip --no-cache-dir install \
        Cython \
        ipykernel \
        jupyter \
        path.py \
        Pillow \
        pygments \
        six \
        sphinx \
        wheel \
        zmq \
        && \
    python3 -m ipykernel.kernelspec

# Install TensorFlow
RUN pip --no-cache-dir install \
    https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow_gpu-1.3.0-cp35-cp35m-linux_x86_64.whl

# Expose Ports for TensorBoard (6006), Ipython (8888)
EXPOSE 6006 8888

# Copy code of tensorflow model
RUN mkdir /gevaert_model
COPY . /gevaert_model 

WORKDIR "/root"
CMD ["/bin/bash"]
